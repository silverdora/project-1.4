@model Chapeau.Models.ViewModels.TableOrderViewModel

<button onclick="openTableModal(@Model.TableId, '@Model.IsOccupied'.toLowerCase(), '@Model.OrderStatus?.ToString()')"
        class="restaurant-table @(Model.IsOccupied ? "occupied" : "free")"
        style="border: none; background: none; padding: 0; width: 100%; text-align: left; cursor: pointer;">
    <div class="table-top">
        <span>Table @Model.TableNumber</span>
    </div>

    <div class="table-status">
        <span class="badge @(Model.IsOccupied ? "bg-danger" : "bg-success")">
            @(Model.IsOccupied ? "Occupied" : "Free")
        </span>
        <br />

        @if (Model.IsOccupied && Model.OrderStatus.HasValue)
        {
            switch (Model.OrderStatus.Value)
            {
                case Chapeau.Models.Status.InProgress:
                    <span class="badge bg-warning text-dark">Being Prepared</span>
                    ;
                    break;
                case Chapeau.Models.Status.ReadyToBeServed:
                    <span class="badge bg-success">Ready to Serve</span>
                    ;
                    break;
                case Chapeau.Models.Status.Served:
                    <span class="badge bg-secondary">Served</span>
                    ;
                    break;
            }
        }
        else if (Model.IsOccupied)
        {
            <span class="text-muted small">No Order</span>
        }
    </div>
</button>
