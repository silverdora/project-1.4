@model FilteredOrdersViewModel
@using Chapeau.ViewModels



@{
    ViewData["Title"] = "RunningOrders";
}

<h5>@Model.Status orders</h5>

@*<a class="btn btn-primary" href="/RunningOrders/Index">Back to all</a>*@

<div class="col-6">
    <form asp-action="Filtered" method="get">
        <div class="form-group">
            <label for="type">Choose order status:</label>
            <select class="form-control" id="type" name="status">
                @*<option value="All">All</option>*@
                <option value="New">New</option>
                <option value="InProgress">In Progress</option>
                <option value="Ready">Ready</option>
            </select>
        </div>
        <button class="btn btn-primary" type="submit">Open</button>
    </form>
</div>

<div class="row row-cols-1 row-cols-md-2 g-4">
    <div class="col">
        @{
            foreach (Order order in Model.Orders)
            {
                <div class="card" style="width: 18rem;">
                    <div class="card-body">
                        <h6 class="card-title">@order.Employee.employeeName</h6>
                        <p class="card-text">table #@order.Table.TableNumber</p>
                        <ul class="list-group list-group-flush">
                            @{
                                foreach (OrderItem orderItem in order.OrderItems)
                                {
                                    <li class="list-group-item">
                                        @{
                                            <p class="card-text"><em>@orderItem.MenuItem.Item_name</em></p>
                                            <small>Order time: @orderItem.IncludeDate.ToString("HH:mm")</small>

                                            <br />
                                            <small>Waiting time: @((int)orderItem.WaitingTime.TotalMinutes) min.</small>

                                            <br />
                                            if (Model.Status == Status.Ordered)
                                            {
                                                <form action="/RunningOrders/ChangeOrderStatus" method="post">
                                                    <input hidden name="itemID" value="@orderItem.ItemID" />
                                                    <input hidden name="status" value="InProgress" />
                                                    <button type="submit" class="btn btn-primary">Prepare</button>
                                                </form>
                                            }
                                            else if (Model.Status == Status.InProgress)
                                            {
                                                {
                                                    <button asp-action="ChangeOrderStatus" class="btn btn-primary">Ready</button>
                                                }
                                            }
                                            else if (Model.Status == Status.Ready)
                                            {
                                                <form action="/RunningOrders/ChangeOrderStatus" method="post">
                                                    <input hidden name="itemID" value="@orderItem.ItemID" />
                                                    <input hidden name="status" value="Served" />
                                                    <button type="submit" class="btn btn-primary">Close</button>
                                                </form>
                                            }
                                        }
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
        }
    </div>
</div>

