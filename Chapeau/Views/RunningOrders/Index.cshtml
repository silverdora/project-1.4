@model RunningOrdersViewModel
@using Chapeau.ViewModels


@{
    ViewData["Title"] = "RunningOrders";
}

<h2>Running Orders</h2>

<div class="col mb-2" role="group">
    <a class="btn btn-dark" href="/RunningOrders/Index">Running Orders</a>
    <a class="btn btn-light" href="/RunningOrders/FinishedOrders">Finished Orders</a>
</div>
<a class="btn btn-primary mb-2" href="/RunningOrders/Index">Refresh</a>
@if (TempData["StatusChangeMessage"] != null)
{
    <div class="alert alert-success">@TempData["StatusChangeMessage"]</div>
}
<div class="mb-4">
    <h4>Ordered</h4>
    <div class="container">
        <div class="row d-flex align-items-start">
            @{
                foreach (Order order in Model.NewOrders)
                {
                    var viewData = new ViewDataDictionary(ViewData){
                        { "OrdersByCourse", Model.NewOrdersByCourse },
                        { "CurrentStatus", Status.Ordered },
                        { "NewStatus", Status.InProgress },
                        {"EmployeeRole", Model.Employee.Role }
                    };
                    <partial name="_OrderCard" model="@order" view-data="viewData" />
                }
            }
        </div>
    </div>
</div>


<div class="mb-4">
    <h4>Being prepared</h4>
    <div class="container">
        <div class="row d-flex align-items-start">
            @{
                foreach (Order order in Model.InProgessOrders)
                {
                    var viewData = new ViewDataDictionary(ViewData){
                        { "OrdersByCourse", Model.PreparingOrdersByCourse },
                        { "CurrentStatus", Status.InProgress },
                        { "NewStatus", Status.ReadyToBeServed },
                        {"EmployeeRole", Model.Employee.Role }
                    };
                    <partial name="_OrderCard" model="@order" view-data="viewData" />
                }
            }
        </div>
    </div>
</div>