@model Chapeau.ViewModels.RunningOrdersViewModel


@{
    ViewData["Title"] = "RunningOrders";
}

<h2>Orders</h2>

<a class="btn btn-primary" href="/RunningOrders/Index">Refresh</a>

<div class="col-6">
    <form asp-action="Filtered" method="get">
        <div class="form-group">
            <label for="type">Choose order status:</label>
            <select class="form-control mb-1" id="type" name="status">
                <option value="New">New</option>
                <option value="InProgress">In Progress</option>
                <option value="Ready">Ready</option>
            </select>
        </div>
        <button class="btn btn-primary mb-2" type="submit">Open</button>
    </form>
</div>

<div class="mb-4">
    <h4>New</h4>
    <div class="container">
        <div class="row d-flex align-items-start">
            @{
                foreach (Order order in Model.NewOrders)
                {
                    <div class="card m-2" style="width: 24rem; padding: 0">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Order #@order.OrderID</h5>
                            <p class="card-text mb-0">@order.Employee.employeeName</p>
                            <p class="card-text mb-0">table #@order.Table.TableNumber</p>
                        </div>
                        <div class="card-body">
                            @{
                                foreach (MenuCategory course in Model.NewOrdersByCourse[order.OrderID])
                                {
                                    <strong>@course</strong>
                                    <ul class="list-group list-group-flush">

                                        @foreach (OrderItem orderItem in order.OrderItems)
                                            if (orderItem.MenuItem.Category == course)
                                            {
                                                <li class="list-group-item">
                                                    <div class=" d-flex justify-content-between align-items-center">
                                                        <em>@orderItem.MenuItem.Item_name (@orderItem.Quantity)</em>
                                                        <form action="/RunningOrders/ChangeOrderStatus" method="post">
                                                            <input hidden name="itemID" value="@orderItem.ItemID" />
                                                            <input hidden name="status" value="InProgress" />
                                                            <span type="submit" class="badge bg-primary rounded-pill">Prepare</span>
                                                        </form>
                                                    </div>
                                                    <small>Order time: @orderItem.IncludeDate.ToString("HH:mm")</small>
                                                    <br />
                                                    <small>Waiting time: @((int)orderItem.WaitingTime.TotalMinutes) min.</small>
                                                    <br />
                                                </li>
                                            }
                                    </ul>
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="mb-4">
    <h4>Being prepared</h4>
    <div class="container">
        <div class="row d-flex align-items-start">
            @{
                foreach (Order order in Model.InProgessOrders)
                {
                    <div class="card m-2" style="width: 24rem; padding: 0">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Order #@order.OrderID</h5>
                            <p class="card-text mb-0">@order.Employee.employeeName</p>
                            <p class="card-text mb-0">table #@order.Table.TableNumber</p>
                        </div>
                        <div class="card-body">
                            @{
                                foreach (MenuCategory course in Model.PreparingOrdersByCourse[order.OrderID])
                                {
                                    <strong>@course</strong>
                                    <ul class="list-group list-group-flush">

                                        @foreach (OrderItem orderItem in order.OrderItems)
                                            if (orderItem.MenuItem.Category == course)
                                            {
                                                <li class="list-group-item">
                                                    <div class=" d-flex justify-content-between align-items-center">
                                                        <em>@orderItem.MenuItem.Item_name (@orderItem.Quantity)</em>
                                                        <form action="/RunningOrders/ChangeOrderStatus" method="post">
                                                            <input hidden name="itemID" value="@orderItem.ItemID" />
                                                            <input hidden name="status" value="ReadyToBeServed" />
                                                            <span type="submit" class="badge bg-primary rounded-pill">Ready to be served</span>
                                                        </form>
                                                    </div>
                                                    <small>Order time: @orderItem.IncludeDate.ToString("HH:mm")</small>
                                                    <br />
                                                    <small>Waiting time: @((int)orderItem.WaitingTime.TotalMinutes) min.</small>
                                                    <br />
                                                </li>
                                            }
                                    </ul>
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>

<div class="mb-4">
    <h4>Ready to be served</h4>
    <div class="container">
        <div class="row row d-flex align-items-start">
            @{
                foreach (Order order in Model.ReadyOrders)
                {
                    <div class="card m-2" style="width: 24rem; padding: 0">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Order #@order.OrderID</h5>
                            <p class="card-text mb-0">@order.Employee.employeeName</p>
                            <p class="card-text mb-0">table #@order.Table.TableNumber</p>
                        </div>
                        <div class="card-body">
                            @{
                                foreach (MenuCategory course in Model.ReadyOrdersByCourse[order.OrderID])
                                {
                                    <strong>@course</strong>
                                    <ul class="list-group list-group-flush">

                                        @foreach (OrderItem orderItem in order.OrderItems)
                                            if (orderItem.MenuItem.Category == course)
                                            {
                                                <li class="list-group-item">
                                                    <div class=" d-flex justify-content-between align-items-center">
                                                        <em>@orderItem.MenuItem.Item_name (@orderItem.Quantity)</em>
                                                        <form action="/RunningOrders/ChangeOrderStatus" method="post">
                                                            <input hidden name="itemID" value="@orderItem.ItemID" />
                                                            <input hidden name="status" value="Served" />
                                                            <button type="submit" class="badge bg-primary rounded-pill">Close</button>
                                                        </form>
                                                    </div>
                                                    <small>Order time: @orderItem.IncludeDate.ToString("HH:mm")</small>
                                                    <br />
                                                    <small>Waiting time: @((int)orderItem.WaitingTime.TotalMinutes) min.</small>
                                                    <br />
                                                </li>
                                            }
                                    </ul>
                                }
                            }
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</div>